# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "Setup-go" ]
  pull_request:
    branches: [ "Setup-go" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.3'

    - name: Build
      run: go mod tidy && go build .

    - name: Test
      run: go mod tidy && go test -v .

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this release:
          - Describe your changes here
        draft: false
        prerelease: false

    - name: Set Filename
      id: set_filename
      run: echo "::set-output name=filename::$(date +'%Y-%m-%d_%H-%M-%S')"

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./$(echo ${{ steps.set_filename.outputs.filename }})
        asset_name: $(echo ${{ steps.set_filename.outputs.filename }})
        asset_content_type: application/octet-stream
